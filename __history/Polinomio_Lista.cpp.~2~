//---------------------------------------------------------------------------

#pragma hdrstop

#include "Polinomio_Lista.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
void PolinomioLista::Crear(){
	LE.Crear();
	LC.Crear();
}

bool PolinomioLista::Es_Cero(){

return LC.Vacia();

}

int PolinomioLista::Grado(){
if (LC.Longitud()>0) {
  int max=LE.Recupera(1);
	int i;
	for (i = 0; i < LC.Longitud() ; i++) {
		if (LE.Recupera(i+1)>max ) {
		   max=LE.Recupera(i+1);
		}
	}
	 return max;
 }else{
		  throw new Exception("Error: Lista Vacia");
 }

}


 int PolinomioLista::Coeficiente(int Exponente){
	if (Exponente>=0 && Exponente <=Grado() ) {
	int i;
	  for (i = 0; i <LC.Longitud(); i++) {
			if (LE.Recupera(i+1)==Exponente) {
			   return LC.Recupera(i+1);
			}
		  }
		}
		else {

			  throw new Exception("Error: No existe termino con ese exponente");
			}
 }


 int PolinomioLista::Num_De_Terminos(){
	return LC.Longitud();

 }

 int PolinomioLista::Get_Exponente(int NumDeTermino){
	return LE.Recupera(NumDeTermino);
 }

 void PolinomioLista::Desplazar_Un_Elem_Hacia_La_Pos_Lug(int lug){
		 LE.Suprime(lug);
		 LC.Suprime(lug);
 }

 int PolinomioLista::ExisteExp(int exp){
		int i;
  for (i =0 ; i < LE.Longitud(); i++) {
		if (LE.Recupera(i+1)==exp) {
			return i+1;
		}
   }
   return -1;

 }

  void PolinomioLista::Poner_Termino(int Coeficiente,int Exponente){
	   int lug=ExisteExp(Exponente);
	 if (lug!=-1) {
	 // LC.Inserta();	 //VC[lug]=VC[lug]+Coeficiente;
	  LC.Modifica(lug,LC.Recupera(lug)+Coeficiente);
			 if (LC.Recupera(lug) ==0) {
				//Desplazar 1 elemento hacia la posicion lug
				Desplazar_Un_Elem_Hacia_La_Pos_Lug(lug);
				//nt=nt-1;
			 }
	 }
			 else{
			 LC.Inserta(1,Coeficiente);  //	VC[nt]=Coeficiente;
			 LE.Inserta(1,Exponente); //	VE[nt]=Exponente;
			   //	nt=nt+1;
			  }


  }





  void PolinomioLista::MostrarPolinomioEnLabel(TLabel *l){
	l->Font->Size=18;
	 l->Caption="f(x)= ";


	 int i;
	 for (i = 0; i <LC.Longitud(); i++) {
		l->Caption=l->Caption+IntToStr(LC.Recupera(i+1))+"x^"+IntToStr(LE.Recupera(i+1))+" ";


	 }


  }
