//---------------------------------------------------------------------------

#pragma hdrstop

#include "Pila_Vector.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)

void PilaVector::Crear(){
   tope=0;
}

bool PilaVector::Vacia(){
  return tope==0;
}

void PilaVector::Meter(int Numero){
  if (tope<MaxPila) {
	   tope=tope+1;
	  Elemento[tope]=Numero;
  }


}


int PilaVector::Sacar(){
	int e;
	 if (!Vacia()) {
		 e=Elemento[tope];
		 tope=tope-1;
	 }else{

	 throw new Exception("Error: Pila Vacia");
	 }

  return e;
}

int PilaVector::Cima(){
	if (!Vacia()) {
		  return Elemento[tope];
	}else{
	 throw new Exception("Error: Pila Vacia");
	}


}

void PilaVector::Mostrar(TStringGrid *t){
	  int i;
	  t->RowCount=tope;
	  t->Height=tope*24;

	  int q=tope;

	  PilaVector Aux;
	  Aux.Crear();
	   for (i = 0; i < q ; i++) {
		   int a=Sacar();
		   Aux.Meter(a);

		   t->Cells[0][i]=a;

	   }

	   for (i = 0; i < q ; i++) {
		  int a=Aux.Sacar();

		   Meter(a);

	   }
}


void PilaVector::Mostrar(int x,int y,TCanvas *t){

	//----------------------------
	t->Brush->Color=clWhite;
	t->Pen->Color=clWhite;
	t->Rectangle(0,0,1000,1000);
	t->Pen->Color=clBlue;
	//------------------------------------------------------------------
	   int q=tope;
	   int c=0;
	  PilaVector Aux;
	  Aux.Crear();
	   for (int i = 0; i < q ; i++) {
		   int a=Sacar();
		   Aux.Meter(a);

		   if (abs(a) >100000000) {
			t->TextOutW(x+35,y+25+(c*20),IntToStr(a));
		   }else{
		   t->TextOutW(x+55,y+25+(c*20),IntToStr(a));
		   }
		   c=c+1;

	   }

	   for (int i = 0; i < q ; i++) {
		  int a=Aux.Sacar();

		   Meter(a);

	   }
	//------------------------------------------------------------------
	t->MoveTo(x,y);
	t->LineTo(x+30,y);



	t->LineTo(x+30,y+20+(c*20));

	t->LineTo(x+100,y+20+(c*20));


	t->LineTo(x+100,y);

	t->LineTo(x+130,y);
	for (int i = 0; i < c; i++) {
	  t->MoveTo(x+30,y+20+(i*20));

	  t->LineTo(x+100,y+20+(i*20));
	}

}
